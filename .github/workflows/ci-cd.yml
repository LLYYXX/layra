name: LAYRA CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: 登录Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: 构建并推送后端镜像
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/layra-backend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/layra-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/layra-backend:buildcache,mode=max
      
      - name: 设置Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      
      - name: 构建前端
        run: |
          cd web
          npm install
          npm run build
      
      - name: 构建并推送前端镜像
        uses: docker/build-push-action@v4
        with:
          context: ./web
          file: ./web/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/layra-frontend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/layra-frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/layra-frontend:buildcache,mode=max
          
  deploy-to-server:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 配置SSH密钥
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          if_key_exists: replace
      
      - name: 将文件传输到服务器
        run: |
          # 创建远程目录
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p /opt/layra"
          
          # 只传输docker-compose.yml文件，使用服务器上的.env
          scp docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/layra/
          
          # 创建部署脚本并传输
          cat > deploy.sh << EOL
          #!/bin/bash
          cd /opt/layra
          docker-compose pull
          docker-compose down
          docker-compose up -d
          EOL
          chmod +x deploy.sh
          scp deploy.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/layra/
      
      - name: 执行远程部署
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd /opt/layra && chmod +x deploy.sh && ./deploy.sh" 