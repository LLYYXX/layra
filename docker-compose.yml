version: '3.8'

services:
  # 数据库服务
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-layra}
      MYSQL_USER: ${MYSQL_USER:-layra}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-layra}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME:-testuser}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD:-testpassword}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "9110:9110"
      - "9111:9111"
    volumes:
      - minio_data:/data
    command: server /data --console-address :9111 --address :9110
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9110/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    image: milvusdb/milvus:latest
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9110
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - etcd
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 20s
      retries: 3

  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd_data:/etcd
    command: etcd --advertise-client-urls=http://127.0.0.1:2379 --listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  # 后端API服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      APP_DB_URL: "mysql+asyncmy://${MYSQL_USER:-layra}:${MYSQL_PASSWORD:-layra}@mysql/${MYSQL_DATABASE:-layra}"
      APP_MONGODB_URL: "mongodb:27017"
      APP_MONGODB_DB: "chat_mongodb"
      APP_MONGODB_ROOT_USERNAME: "${MONGODB_ROOT_USERNAME:-testuser}"
      APP_MONGODB_ROOT_PASSWORD: "${MONGODB_ROOT_PASSWORD:-testpassword}"
      APP_REDIS_URL: "redis:6379"
      APP_REDIS_PASSWORD: ""
      APP_SECRET_KEY: "${APP_SECRET_KEY:-your_secret_key}"
      APP_ALGORITHM: "HS256"
      APP_MINIO_URL: "http://minio:9110"
      APP_MINIO_ACCESS_KEY: "${MINIO_ROOT_USER:-minioadmin}"
      APP_MINIO_SECRET_KEY: "${MINIO_ROOT_PASSWORD:-minioadmin}"
      APP_MINIO_BUCKET_NAME: "ai-chat"
      APP_MILVUS_URI: "http://milvus:19530"
      APP_COLBERT_MODEL_PATH: "/app/colqwen2.5-v0.2"
      APP_USE_API_EMBEDDING: "false"
    depends_on:
      mysql:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      milvus:
        condition: service_healthy

  # 模型服务器
  model_server:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "model_server.py"]
    environment:
      APP_COLBERT_MODEL_PATH: "/app/colqwen2.5-v0.2"
      APP_USE_API_EMBEDDING: "false"
    depends_on:
      - backend

  # 前端服务
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: "http://backend:8000"
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  mysql_data:
  mongodb_data:
  redis_data:
  minio_data:
  etcd_data: 